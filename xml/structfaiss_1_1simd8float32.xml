<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structfaiss_1_1simd8float32" kind="struct" language="C++" prot="public">
    <compoundname>faiss::simd8float32</compoundname>
    <basecompoundref refid="structfaiss_1_1simd256bit" prot="public" virt="non-virtual">faiss::simd256bit</basecompoundref>
    <basecompoundref refid="structfaiss_1_1simd256bit" prot="public" virt="non-virtual">faiss::simd256bit</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1simd8float32_1ab83d945254427a5965b2d063a9933689" prot="public" static="no" mutable="no">
        <type>float32x4x2_t</type>
        <definition>float32x4x2_t faiss::simd8float32::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <qualifiedname>faiss::simd8float32::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1092" column="19" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1092" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1a0061ab97fb706619dbb1db084d89c57e" prot="public" static="no" mutable="no">
        <type>__m256i</type>
        <definition>__m256i faiss::simd256bit::i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <qualifiedname>faiss::simd256bit::i</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="30" column="17" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1a745d258c489056abcb18de77d04dc7da" prot="public" static="no" mutable="no">
        <type>__m256</type>
        <definition>__m256 faiss::simd256bit::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <qualifiedname>faiss::simd256bit::f</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="31" column="16" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1a1142cc58e944c92c58668dffee8d0aeb" prot="public" static="no" mutable="no">
        <type>union <ref refid="structfaiss_1_1simd256bit" kindref="compound">faiss::simd256bit</ref></type>
        <definition>union faiss::simd256bit faiss::simd256bit</definition>
        <argsstring></argsstring>
        <name></name>
        <qualifiedname>faiss::simd256bit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="32" column="5"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1acb1ccdc5222ee156bacdc10a5f94d736" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t faiss::simd256bit::u8[32]</definition>
        <argsstring>[32]</argsstring>
        <name>u8</name>
        <qualifiedname>faiss::simd256bit::u8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="19" column="17" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1ae1a0c5c5a086370f21a346bd20e2b378" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t faiss::simd256bit::u16[16]</definition>
        <argsstring>[16]</argsstring>
        <name>u16</name>
        <qualifiedname>faiss::simd256bit::u16</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="20" column="18" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1aa68a3cf73ecbc73107a720e8c3f1d25c" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t faiss::simd256bit::u32[8]</definition>
        <argsstring>[8]</argsstring>
        <name>u32</name>
        <qualifiedname>faiss::simd256bit::u32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="21" column="18" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1a73b7c0cc868d44cc02c58688977ba4a7" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float faiss::simd256bit::f32[8]</definition>
        <argsstring>[8]</argsstring>
        <name>f32</name>
        <qualifiedname>faiss::simd256bit::f32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="22" column="15" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1a7c8581ec29fc18c1d165dbb76b050732" prot="public" static="no" mutable="no">
        <type>union <ref refid="structfaiss_1_1simd256bit" kindref="compound">faiss::simd256bit</ref></type>
        <definition>union faiss::simd256bit faiss::simd256bit</definition>
        <argsstring></argsstring>
        <name></name>
        <qualifiedname>faiss::simd256bit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="23" column="5"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a13a05c69be6321dfa2778291ca5be638" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8float32::simd8float32</definition>
        <argsstring>()</argsstring>
        <name>simd8float32</name>
        <qualifiedname>faiss::simd8float32::simd8float32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="618" column="5" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="618" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1ad3d875200c6287b25ddbab84cb4d60df" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8float32::simd8float32</definition>
        <argsstring>(simd256bit x)</argsstring>
        <name>simd8float32</name>
        <qualifiedname>faiss::simd8float32::simd8float32</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd256bit" kindref="compound">simd256bit</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="620" column="14" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="620" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1adf206c50f1615d4b30f2971daa4fbb42" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8float32::simd8float32</definition>
        <argsstring>(__m256 x)</argsstring>
        <name>simd8float32</name>
        <qualifiedname>faiss::simd8float32::simd8float32</qualifiedname>
        <param>
          <type>__m256</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="622" column="14" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="622" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1aee4b896ae49c702e76cfd96736640aea" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8float32::simd8float32</definition>
        <argsstring>(float x)</argsstring>
        <name>simd8float32</name>
        <qualifiedname>faiss::simd8float32::simd8float32</qualifiedname>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="624" column="14" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="624" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a6e375f0accbc236eea629e5965ad178e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8float32::simd8float32</definition>
        <argsstring>(const float *x)</argsstring>
        <name>simd8float32</name>
        <qualifiedname>faiss::simd8float32::simd8float32</qualifiedname>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="626" column="14" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="626" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a6e406fc027dece9bdc77e488185cc6be" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8float32::simd8float32</definition>
        <argsstring>(float f0, float f1, float f2, float f3, float f4, float f5, float f6, float f7)</argsstring>
        <name>simd8float32</name>
        <qualifiedname>faiss::simd8float32::simd8float32</qualifiedname>
        <param>
          <type>float</type>
          <declname>f0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f3</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f4</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f5</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f6</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="628" column="14" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="628" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1adf26fba0ccce9854456863aaa8719a11" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref></type>
        <definition>simd8float32 faiss::simd8float32::operator*</definition>
        <argsstring>(simd8float32 other) const</argsstring>
        <name>operator*</name>
        <qualifiedname>faiss::simd8float32::operator*</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="639" column="18" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="639" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1af5643dcc476bcc526fdeb6e46893d49f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref></type>
        <definition>simd8float32 faiss::simd8float32::operator+</definition>
        <argsstring>(simd8float32 other) const</argsstring>
        <name>operator+</name>
        <qualifiedname>faiss::simd8float32::operator+</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="643" column="18" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="643" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a5d16bd606c76d37851e35eeb0ce85cba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref></type>
        <definition>simd8float32 faiss::simd8float32::operator-</definition>
        <argsstring>(simd8float32 other) const</argsstring>
        <name>operator-</name>
        <qualifiedname>faiss::simd8float32::operator-</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="647" column="18" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="647" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a6f282b9baa9983e40375d332a8186bc6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref> &amp;</type>
        <definition>simd8float32 &amp; faiss::simd8float32::operator+=</definition>
        <argsstring>(const simd8float32 &amp;other)</argsstring>
        <name>operator+=</name>
        <qualifiedname>faiss::simd8float32::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="651" column="18" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="651" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a0752de8c06cf950bc94f1d22ac3c1fc6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool faiss::simd8float32::operator==</definition>
        <argsstring>(simd8float32 other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>faiss::simd8float32::operator==</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="656" column="10" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="656" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1add1077584838369ffc9a7f0644abd7c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool faiss::simd8float32::operator!=</definition>
        <argsstring>(simd8float32 other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>faiss::simd8float32::operator!=</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="663" column="10" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="663" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a275a26173f4feaf234c625ed5ecbac9a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd8float32::tostring</definition>
        <argsstring>() const</argsstring>
        <name>tostring</name>
        <qualifiedname>faiss::simd8float32::tostring</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="667" column="17" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="667" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a13a05c69be6321dfa2778291ca5be638" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8float32::simd8float32</definition>
        <argsstring>()</argsstring>
        <name>simd8float32</name>
        <qualifiedname>faiss::simd8float32::simd8float32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="741" column="5" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="741" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1ad3268b06fc47d6b36d729c8fa5415df7" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8float32::simd8float32</definition>
        <argsstring>(const simd256bit &amp;x)</argsstring>
        <name>simd8float32</name>
        <qualifiedname>faiss::simd8float32::simd8float32</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1simd256bit" kindref="compound">simd256bit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="743" column="14" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="743" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1aee4b896ae49c702e76cfd96736640aea" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8float32::simd8float32</definition>
        <argsstring>(float x)</argsstring>
        <name>simd8float32</name>
        <qualifiedname>faiss::simd8float32::simd8float32</qualifiedname>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="745" column="14" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="745" bodyend="747"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a6e375f0accbc236eea629e5965ad178e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8float32::simd8float32</definition>
        <argsstring>(const float *x)</argsstring>
        <name>simd8float32</name>
        <qualifiedname>faiss::simd8float32::simd8float32</qualifiedname>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="749" column="14" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="749" bodyend="751"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1ab494e970b746d06952e7997c5068ca92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd8float32::set1</definition>
        <argsstring>(float x)</argsstring>
        <name>set1</name>
        <qualifiedname>faiss::simd8float32::set1</qualifiedname>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="753" column="10" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="753" bodyend="757"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a6e406fc027dece9bdc77e488185cc6be" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8float32::simd8float32</definition>
        <argsstring>(float f0, float f1, float f2, float f3, float f4, float f5, float f6, float f7)</argsstring>
        <name>simd8float32</name>
        <qualifiedname>faiss::simd8float32::simd8float32</qualifiedname>
        <param>
          <type>float</type>
          <declname>f0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f3</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f4</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f5</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f6</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="759" column="14" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="759" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1ad262436ce2ae29c78e8e25b6c559e2fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref></type>
        <definition>simd8float32 faiss::simd8float32::operator*</definition>
        <argsstring>(const simd8float32 &amp;other) const</argsstring>
        <name>operator*</name>
        <qualifiedname>faiss::simd8float32::operator*</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="790" column="18" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="790" bodyend="793"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1ac015645650ef079ee8975cbdc04c4813" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref></type>
        <definition>simd8float32 faiss::simd8float32::operator+</definition>
        <argsstring>(const simd8float32 &amp;other) const</argsstring>
        <name>operator+</name>
        <qualifiedname>faiss::simd8float32::operator+</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="795" column="18" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="795" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a526ff37e5dfec782a5530662cfe09c57" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref></type>
        <definition>simd8float32 faiss::simd8float32::operator-</definition>
        <argsstring>(const simd8float32 &amp;other) const</argsstring>
        <name>operator-</name>
        <qualifiedname>faiss::simd8float32::operator-</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="800" column="18" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="800" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a6f282b9baa9983e40375d332a8186bc6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref> &amp;</type>
        <definition>simd8float32 &amp; faiss::simd8float32::operator+=</definition>
        <argsstring>(const simd8float32 &amp;other)</argsstring>
        <name>operator+=</name>
        <qualifiedname>faiss::simd8float32::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="805" column="18" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="805" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a0752de8c06cf950bc94f1d22ac3c1fc6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool faiss::simd8float32::operator==</definition>
        <argsstring>(simd8float32 other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>faiss::simd8float32::operator==</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="813" column="10" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="813" bodyend="821"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1add1077584838369ffc9a7f0644abd7c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool faiss::simd8float32::operator!=</definition>
        <argsstring>(simd8float32 other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>faiss::simd8float32::operator!=</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="823" column="10" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="823" bodyend="825"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a275a26173f4feaf234c625ed5ecbac9a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd8float32::tostring</definition>
        <argsstring>() const</argsstring>
        <name>tostring</name>
        <qualifiedname>faiss::simd8float32::tostring</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="827" column="17" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="827" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a0d95a77258c4fb7770d87dd20616b618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8float32::simd8float32</definition>
        <argsstring>()=default</argsstring>
        <name>simd8float32</name>
        <qualifiedname>faiss::simd8float32::simd8float32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1094" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1aee4b896ae49c702e76cfd96736640aea" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8float32::simd8float32</definition>
        <argsstring>(float x)</argsstring>
        <name>simd8float32</name>
        <qualifiedname>faiss::simd8float32::simd8float32</qualifiedname>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1096" column="14" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1096" bodyend="1096"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a3f1e8da257ffd2da62e870f27d1aea35" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8float32::simd8float32</definition>
        <argsstring>(const float32x4x2_t &amp;v)</argsstring>
        <name>simd8float32</name>
        <qualifiedname>faiss::simd8float32::simd8float32</qualifiedname>
        <param>
          <type>const float32x4x2_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1098" column="14" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1098" bodyend="1098"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a033d162035528e258ed4e1f908ea7daf" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename std::enable_if&lt; <ref refid="structfaiss_1_1detail_1_1simdlib_1_1is__simd256bit" kindref="compound">detail::simdlib::is_simd256bit</ref>&lt; T &gt;::value, std::nullptr_t &gt;::type</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>faiss::simd8float32::simd8float32</definition>
        <argsstring>(const T &amp;x)</argsstring>
        <name>simd8float32</name>
        <qualifiedname>faiss::simd8float32::simd8float32</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1105" column="14" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1105" bodyend="1106"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a6e375f0accbc236eea629e5965ad178e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8float32::simd8float32</definition>
        <argsstring>(const float *x)</argsstring>
        <name>simd8float32</name>
        <qualifiedname>faiss::simd8float32::simd8float32</qualifiedname>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1108" column="14" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1108" bodyend="1109"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a6e406fc027dece9bdc77e488185cc6be" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8float32::simd8float32</definition>
        <argsstring>(float f0, float f1, float f2, float f3, float f4, float f5, float f6, float f7)</argsstring>
        <name>simd8float32</name>
        <qualifiedname>faiss::simd8float32::simd8float32</qualifiedname>
        <param>
          <type>float</type>
          <declname>f0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f3</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f4</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f5</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f6</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1111" column="14" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1111" bodyend="1123"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a8f773f2162ea15dc4507f5d90236f6b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd8float32::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>faiss::simd8float32::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1125" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1125" bodyend="1127"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a732cf1710939845927604931a88a1d1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd8float32::storeu</definition>
        <argsstring>(float *ptr) const</argsstring>
        <name>storeu</name>
        <qualifiedname>faiss::simd8float32::storeu</qualifiedname>
        <param>
          <type>float *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1129" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1129" bodyend="1132"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a89dd9608ee88051ba0f7f666a5862a31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd8float32::loadu</definition>
        <argsstring>(const float *ptr)</argsstring>
        <name>loadu</name>
        <qualifiedname>faiss::simd8float32::loadu</qualifiedname>
        <param>
          <type>const float *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1134" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1134" bodyend="1137"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1aeb0faa4843de8231506aea6b6386eae2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd8float32::store</definition>
        <argsstring>(float *ptr) const</argsstring>
        <name>store</name>
        <qualifiedname>faiss::simd8float32::store</qualifiedname>
        <param>
          <type>float *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1139" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1139" bodyend="1141"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a99a3ff736770cd8a9eb44d33c3222819" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd8float32::bin</definition>
        <argsstring>(char bits[257]) const</argsstring>
        <name>bin</name>
        <qualifiedname>faiss::simd8float32::bin</qualifiedname>
        <param>
          <type>char</type>
          <declname>bits</declname>
          <array>[257]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1143" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1143" bodyend="1145"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a478115a4e114b9887a6c1ae1e10faae4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd8float32::bin</definition>
        <argsstring>() const</argsstring>
        <name>bin</name>
        <qualifiedname>faiss::simd8float32::bin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1147" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1147" bodyend="1149"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1ad262436ce2ae29c78e8e25b6c559e2fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref></type>
        <definition>simd8float32 faiss::simd8float32::operator*</definition>
        <argsstring>(const simd8float32 &amp;other) const</argsstring>
        <name>operator*</name>
        <qualifiedname>faiss::simd8float32::operator*</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1151" column="18" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1151" bodyend="1154"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1ac015645650ef079ee8975cbdc04c4813" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref></type>
        <definition>simd8float32 faiss::simd8float32::operator+</definition>
        <argsstring>(const simd8float32 &amp;other) const</argsstring>
        <name>operator+</name>
        <qualifiedname>faiss::simd8float32::operator+</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1156" column="18" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1156" bodyend="1159"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a526ff37e5dfec782a5530662cfe09c57" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref></type>
        <definition>simd8float32 faiss::simd8float32::operator-</definition>
        <argsstring>(const simd8float32 &amp;other) const</argsstring>
        <name>operator-</name>
        <qualifiedname>faiss::simd8float32::operator-</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1161" column="18" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1161" bodyend="1164"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a6f282b9baa9983e40375d332a8186bc6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref> &amp;</type>
        <definition>simd8float32 &amp; faiss::simd8float32::operator+=</definition>
        <argsstring>(const simd8float32 &amp;other)</argsstring>
        <name>operator+=</name>
        <qualifiedname>faiss::simd8float32::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1166" column="18" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1166" bodyend="1172"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a7c286b42e45c261fd8dd32215d7240ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
        <definition>simd8uint32 faiss::simd8float32::operator==</definition>
        <argsstring>(simd8float32 other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>faiss::simd8float32::operator==</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1174" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1174" bodyend="1178"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1acace84c8934ac7cb18d15e629c46a88f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
        <definition>simd8uint32 faiss::simd8float32::operator!=</definition>
        <argsstring>(simd8float32 other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>faiss::simd8float32::operator!=</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1180" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1180" bodyend="1182"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1acdb08127cf7e505446e4d3970de12335" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool faiss::simd8float32::is_same_as</definition>
        <argsstring>(T other) const</argsstring>
        <name>is_same_as</name>
        <qualifiedname>faiss::simd8float32::is_same_as</qualifiedname>
        <param>
          <type>T</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1186" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1186" bodyend="1193"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1a275a26173f4feaf234c625ed5ecbac9a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd8float32::tostring</definition>
        <argsstring>() const</argsstring>
        <name>tostring</name>
        <qualifiedname>faiss::simd8float32::tostring</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1195" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1195" bodyend="1197"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd256bit_1a46f3f3e576ad528e64505c73980c903f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd256bit::storeu</definition>
        <argsstring>(void *ptr) const</argsstring>
        <name>storeu</name>
        <qualifiedname>faiss::simd256bit::storeu</qualifiedname>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="47" column="10" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd256bit_1a44b57fcfb969954b9fc42f7dfee6bdf2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd256bit::loadu</definition>
        <argsstring>(const void *ptr)</argsstring>
        <name>loadu</name>
        <qualifiedname>faiss::simd256bit::loadu</qualifiedname>
        <param>
          <type>const void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="51" column="10" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd256bit_1a9cd7429e3408e78181b1810221664c0f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd256bit::store</definition>
        <argsstring>(void *ptr) const</argsstring>
        <name>store</name>
        <qualifiedname>faiss::simd256bit::store</qualifiedname>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="55" column="10" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd256bit_1a69f933068df260aa8c0f3ac7686e1417" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool faiss::simd256bit::is_same_as</definition>
        <argsstring>(simd256bit other) const</argsstring>
        <name>is_same_as</name>
        <qualifiedname>faiss::simd256bit::is_same_as</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd256bit" kindref="compound">simd256bit</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="75" column="10" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="75" bodyend="79"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structfaiss_1_1simd8float32_1aace44cdab4ba6ce7628a04e663f37a12" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type><ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref></type>
        <definition>static simd8float32 faiss::simd8float32::binary_func</definition>
        <argsstring>(const simd8float32 &amp;a, const simd8float32 &amp;b, F &amp;&amp;f)</argsstring>
        <name>binary_func</name>
        <qualifiedname>faiss::simd8float32::binary_func</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structfaiss_1_1simd8float32" kindref="compound">simd8float32</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="779" column="25" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="779" bodyend="788"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>faiss::simd256bit</label>
        <link refid="structfaiss_1_1simd256bit"/>
      </node>
      <node id="1">
        <label>faiss::simd8float32</label>
        <link refid="structfaiss_1_1simd8float32"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>faiss::simd256bit</label>
        <link refid="structfaiss_1_1simd256bit"/>
      </node>
      <node id="1">
        <label>faiss::simd8float32</label>
        <link refid="structfaiss_1_1simd8float32"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="faiss/utils/simdlib_avx2.h" line="617" column="1" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="617" bodyend="679"/>
    <listofallmembers>
      <member refid="structfaiss_1_1simd8float32_1a99a3ff736770cd8a9eb44d33c3222819" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>bin</name></member>
      <member refid="structfaiss_1_1simd8float32_1a478115a4e114b9887a6c1ae1e10faae4" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>bin</name></member>
      <member refid="structfaiss_1_1simd8float32_1aace44cdab4ba6ce7628a04e663f37a12" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>binary_func</name></member>
      <member refid="structfaiss_1_1simd8float32_1a8f773f2162ea15dc4507f5d90236f6b8" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>clear</name></member>
      <member refid="structfaiss_1_1simd8float32_1ab83d945254427a5965b2d063a9933689" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>data</name></member>
      <member refid="structfaiss_1_1simd256bit_1a745d258c489056abcb18de77d04dc7da" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>f</name></member>
      <member refid="structfaiss_1_1simd256bit_1a73b7c0cc868d44cc02c58688977ba4a7" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>f32</name></member>
      <member refid="structfaiss_1_1simd256bit_1a0061ab97fb706619dbb1db084d89c57e" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>i</name></member>
      <member refid="structfaiss_1_1simd8float32_1acdb08127cf7e505446e4d3970de12335" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>is_same_as</name></member>
      <member refid="structfaiss_1_1simd256bit_1a69f933068df260aa8c0f3ac7686e1417" prot="public" virt="non-virtual" ambiguityscope="faiss::simd256bit::"><scope>faiss::simd8float32</scope><name>is_same_as</name></member>
      <member refid="structfaiss_1_1simd8float32_1a89dd9608ee88051ba0f7f666a5862a31" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>loadu</name></member>
      <member refid="structfaiss_1_1simd256bit_1a44b57fcfb969954b9fc42f7dfee6bdf2" prot="public" virt="non-virtual" ambiguityscope="faiss::simd256bit::"><scope>faiss::simd8float32</scope><name>loadu</name></member>
      <member refid="structfaiss_1_1simd8float32_1add1077584838369ffc9a7f0644abd7c2" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>operator!=</name></member>
      <member refid="structfaiss_1_1simd8float32_1add1077584838369ffc9a7f0644abd7c2" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>operator!=</name></member>
      <member refid="structfaiss_1_1simd8float32_1acace84c8934ac7cb18d15e629c46a88f" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>operator!=</name></member>
      <member refid="structfaiss_1_1simd8float32_1adf26fba0ccce9854456863aaa8719a11" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>operator*</name></member>
      <member refid="structfaiss_1_1simd8float32_1ad262436ce2ae29c78e8e25b6c559e2fa" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>operator*</name></member>
      <member refid="structfaiss_1_1simd8float32_1ad262436ce2ae29c78e8e25b6c559e2fa" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>operator*</name></member>
      <member refid="structfaiss_1_1simd8float32_1af5643dcc476bcc526fdeb6e46893d49f" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>operator+</name></member>
      <member refid="structfaiss_1_1simd8float32_1ac015645650ef079ee8975cbdc04c4813" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>operator+</name></member>
      <member refid="structfaiss_1_1simd8float32_1ac015645650ef079ee8975cbdc04c4813" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>operator+</name></member>
      <member refid="structfaiss_1_1simd8float32_1a6f282b9baa9983e40375d332a8186bc6" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>operator+=</name></member>
      <member refid="structfaiss_1_1simd8float32_1a6f282b9baa9983e40375d332a8186bc6" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>operator+=</name></member>
      <member refid="structfaiss_1_1simd8float32_1a6f282b9baa9983e40375d332a8186bc6" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>operator+=</name></member>
      <member refid="structfaiss_1_1simd8float32_1a5d16bd606c76d37851e35eeb0ce85cba" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>operator-</name></member>
      <member refid="structfaiss_1_1simd8float32_1a526ff37e5dfec782a5530662cfe09c57" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>operator-</name></member>
      <member refid="structfaiss_1_1simd8float32_1a526ff37e5dfec782a5530662cfe09c57" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>operator-</name></member>
      <member refid="structfaiss_1_1simd8float32_1a0752de8c06cf950bc94f1d22ac3c1fc6" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>operator==</name></member>
      <member refid="structfaiss_1_1simd8float32_1a0752de8c06cf950bc94f1d22ac3c1fc6" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>operator==</name></member>
      <member refid="structfaiss_1_1simd8float32_1a7c286b42e45c261fd8dd32215d7240ae" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>operator==</name></member>
      <member refid="structfaiss_1_1simd8float32_1ab494e970b746d06952e7997c5068ca92" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>set1</name></member>
      <member refid="structfaiss_1_1simd256bit_1a7c98ba53fe0ec7eca4deb7ce4e47f20a" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd256bit_1a26e2b4465abb0656c42798b34d099ff9" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd256bit_1addeecdb12ca2085ffc347894adfa1eff" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd256bit_1a68ba432289b25674f585043831580fb9" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd256bit_1a7c98ba53fe0ec7eca4deb7ce4e47f20a" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd256bit_1a68ba432289b25674f585043831580fb9" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd8float32_1a13a05c69be6321dfa2778291ca5be638" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd8float32</name></member>
      <member refid="structfaiss_1_1simd8float32_1ad3d875200c6287b25ddbab84cb4d60df" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd8float32</name></member>
      <member refid="structfaiss_1_1simd8float32_1adf206c50f1615d4b30f2971daa4fbb42" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd8float32</name></member>
      <member refid="structfaiss_1_1simd8float32_1aee4b896ae49c702e76cfd96736640aea" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd8float32</name></member>
      <member refid="structfaiss_1_1simd8float32_1a6e375f0accbc236eea629e5965ad178e" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd8float32</name></member>
      <member refid="structfaiss_1_1simd8float32_1a6e406fc027dece9bdc77e488185cc6be" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd8float32</name></member>
      <member refid="structfaiss_1_1simd8float32_1a13a05c69be6321dfa2778291ca5be638" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd8float32</name></member>
      <member refid="structfaiss_1_1simd8float32_1ad3268b06fc47d6b36d729c8fa5415df7" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd8float32</name></member>
      <member refid="structfaiss_1_1simd8float32_1aee4b896ae49c702e76cfd96736640aea" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd8float32</name></member>
      <member refid="structfaiss_1_1simd8float32_1a6e375f0accbc236eea629e5965ad178e" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd8float32</name></member>
      <member refid="structfaiss_1_1simd8float32_1a6e406fc027dece9bdc77e488185cc6be" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd8float32</name></member>
      <member refid="structfaiss_1_1simd8float32_1a0d95a77258c4fb7770d87dd20616b618" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd8float32</name></member>
      <member refid="structfaiss_1_1simd8float32_1aee4b896ae49c702e76cfd96736640aea" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd8float32</name></member>
      <member refid="structfaiss_1_1simd8float32_1a3f1e8da257ffd2da62e870f27d1aea35" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd8float32</name></member>
      <member refid="structfaiss_1_1simd8float32_1a033d162035528e258ed4e1f908ea7daf" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd8float32</name></member>
      <member refid="structfaiss_1_1simd8float32_1a6e375f0accbc236eea629e5965ad178e" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd8float32</name></member>
      <member refid="structfaiss_1_1simd8float32_1a6e406fc027dece9bdc77e488185cc6be" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>simd8float32</name></member>
      <member refid="structfaiss_1_1simd8float32_1aeb0faa4843de8231506aea6b6386eae2" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>store</name></member>
      <member refid="structfaiss_1_1simd256bit_1a9cd7429e3408e78181b1810221664c0f" prot="public" virt="non-virtual" ambiguityscope="faiss::simd256bit::"><scope>faiss::simd8float32</scope><name>store</name></member>
      <member refid="structfaiss_1_1simd8float32_1a732cf1710939845927604931a88a1d1c" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>storeu</name></member>
      <member refid="structfaiss_1_1simd256bit_1a46f3f3e576ad528e64505c73980c903f" prot="public" virt="non-virtual" ambiguityscope="faiss::simd256bit::"><scope>faiss::simd8float32</scope><name>storeu</name></member>
      <member refid="structfaiss_1_1simd8float32_1a275a26173f4feaf234c625ed5ecbac9a" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>tostring</name></member>
      <member refid="structfaiss_1_1simd8float32_1a275a26173f4feaf234c625ed5ecbac9a" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>tostring</name></member>
      <member refid="structfaiss_1_1simd8float32_1a275a26173f4feaf234c625ed5ecbac9a" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>tostring</name></member>
      <member refid="structfaiss_1_1simd256bit_1ae1a0c5c5a086370f21a346bd20e2b378" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>u16</name></member>
      <member refid="structfaiss_1_1simd256bit_1aa68a3cf73ecbc73107a720e8c3f1d25c" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>u32</name></member>
      <member refid="structfaiss_1_1simd256bit_1acb1ccdc5222ee156bacdc10a5f94d736" prot="public" virt="non-virtual"><scope>faiss::simd8float32</scope><name>u8</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
